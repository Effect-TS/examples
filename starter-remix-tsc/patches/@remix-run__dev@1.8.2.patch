diff --git a/dist/compiler/compileBrowser.js b/dist/compiler/compileBrowser.js
index 8b3e1c2b66c028979f24dade94c4cd762d9ed77a..89f542fa4bc1de7046012a5b33cfc04103d45dd1 100644
--- a/dist/compiler/compileBrowser.js
+++ b/dist/compiler/compileBrowser.js
@@ -26,6 +26,7 @@ var emptyModulesPlugin = require('./plugins/emptyModulesPlugin.js');
 var mdx = require('./plugins/mdx.js');
 var urlImportsPlugin = require('./plugins/urlImportsPlugin.js');
 var fs = require('./utils/fs.js');
+var effectPlugin = require('@effect/remix-plugin');
 
 function _interopNamespace(e) {
   if (e && e.__esModule) return e;
@@ -76,7 +77,7 @@ const createEsbuildConfig = (config, options) => {
     // that we don't want to run in the browser (i.e. action & loader).
     entryPoints[id] = config.routes[id].file + "?browser";
   }
-  let plugins = [deprecatedRemixPackagePlugin.deprecatedRemixPackagePlugin(options.onWarning), cssFilePlugin.cssFilePlugin(options), urlImportsPlugin.urlImportsPlugin(), mdx.mdxPlugin(config), browserRouteModulesPlugin.browserRouteModulesPlugin(config, /\?browser$/), emptyModulesPlugin.emptyModulesPlugin(config, /\.server(\.[jt]sx?)?$/), nodeModulesPolyfill.NodeModulesPolyfillPlugin()];
+  let plugins = [effectPlugin.plugin(true), deprecatedRemixPackagePlugin.deprecatedRemixPackagePlugin(options.onWarning), cssFilePlugin.cssFilePlugin(options), urlImportsPlugin.urlImportsPlugin(), mdx.mdxPlugin(config), browserRouteModulesPlugin.browserRouteModulesPlugin(config, /\?browser$/), emptyModulesPlugin.emptyModulesPlugin(config, /\.server(\.[jt]sx?)?$/), nodeModulesPolyfill.NodeModulesPolyfillPlugin()];
   return {
     entryPoints,
     outdir: config.assetsBuildDirectory,
diff --git a/dist/compiler/compilerServer.js b/dist/compiler/compilerServer.js
index 4f4dc1c3417cffd55b02822c5fa9231cce25dc29..393f21a75fc78d838ac138d6c9066a86d0d8fde6 100644
--- a/dist/compiler/compilerServer.js
+++ b/dist/compiler/compilerServer.js
@@ -26,6 +26,7 @@ var serverBareModulesPlugin = require('./plugins/serverBareModulesPlugin.js');
 var serverEntryModulePlugin = require('./plugins/serverEntryModulePlugin.js');
 var serverRouteModulesPlugin = require('./plugins/serverRouteModulesPlugin.js');
 var urlImportsPlugin = require('./plugins/urlImportsPlugin.js');
+var effectPlugin = require('@effect/remix-plugin');
 
 function _interopNamespace(e) {
   if (e && e.__esModule) return e;
@@ -67,6 +68,7 @@ const createEsbuildConfig = (config, assetsManifestChannel, options) => {
   if (config.serverPlatform !== "node") {
     plugins.unshift(nodeModulesPolyfill.NodeModulesPolyfillPlugin());
   }
+  plugins.unshift(effectPlugin.plugin(false));
   return {
     absWorkingDir: config.rootDirectory,
     stdin,